import numpy as np

from pandas import Series
<<<<<<< HEAD
from pandas.util.testing import assert_almost_equal, assert_series_equal
=======
import pandas._testing as tm
>>>>>>> 08cf566694c2c63d615f5d40137fa82e6bddcc6f


def test_iloc():
    s = Series(np.random.randn(10), index=list(range(0, 20, 2)))

    for i in range(len(s)):
        result = s.iloc[i]
        exp = s[s.index[i]]
<<<<<<< HEAD
        assert_almost_equal(result, exp)
=======
        tm.assert_almost_equal(result, exp)
>>>>>>> 08cf566694c2c63d615f5d40137fa82e6bddcc6f

    # pass a slice
    result = s.iloc[slice(1, 3)]
    expected = s.loc[2:4]
<<<<<<< HEAD
    assert_series_equal(result, expected)
=======
    tm.assert_series_equal(result, expected)
>>>>>>> 08cf566694c2c63d615f5d40137fa82e6bddcc6f

    # test slice is a view
    result[:] = 0
    assert (s[1:3] == 0).all()

    # list of integers
    result = s.iloc[[0, 2, 3, 4, 5]]
    expected = s.reindex(s.index[[0, 2, 3, 4, 5]])
<<<<<<< HEAD
    assert_series_equal(result, expected)
=======
    tm.assert_series_equal(result, expected)
>>>>>>> 08cf566694c2c63d615f5d40137fa82e6bddcc6f


def test_iloc_nonunique():
    s = Series([0, 1, 2], index=[0, 1, 0])
    assert s.iloc[2] == 2
